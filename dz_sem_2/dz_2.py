# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх
# решкой, а некоторые – гербом. Определите минимальное число
# монеток, которые нужно перевернуть, чтобы все монетки были
# повернуты вверх одной и той же стороной. Выведите минимальное
# количество монет, которые нужно перевернуть.
# 5 -> 1 0 1 1 0
# 2

# import random
# n = 11 # number of coins
# count_tails = 0
# count_eagle = 0
# for i in range(n):
#     number = random.randrange(0, 2)
#     print(f"i:{i}, number:{number}")
#     if number == 0:
#         count_tails += 1
#     else:
#         count_eagle += 1
# if count_tails > count_eagle:
#     print(f"count_tails: {count_tails}")
# else:
#     print(f"count_eagle: {count_eagle}")

# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя –
# школьница. Петя помогает Кате по математике. Он задумывает два
# натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для
# этого Петя делает две подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать задуманные Петей числа.
# 4 4 -> 2 2
# 5 6 -> 2 3
# ---------------------
# sum = 4
# prod = 4
# # y^2 - y*sum + prod
# a = 1
# b = -sum
# c = prod
# # D = b^2 - 4ac
# D = b**2 - 4 * a * c
# print(D)
# -------------------
# x = 4
# y = 4
# for i in range(x):
#     for j in range(y):
#         if x == i + j and y == i * j:
#             print(i, j)
# -------------------
# Задача 14: Требуется вывести все целые степени двойки (т.е. числа
# вида 2k), не превосходящие числа N.
# 10 -> 1 2 4 8
n = 10
i = 0
while 2 ** i <= n:
    print(2 ** i)
    i += 1
# -------------------
# 1 Задайте список из нескольких чисел. Напишите программу,
# которая найдёт сумму элементов списка,
# стоящих на нечётной позиции.
# *Пример:*

# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12
# Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.

# Пример:

# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]